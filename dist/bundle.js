/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/domManager.js":
/*!***************************!*\
  !*** ./src/domManager.js ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   changeCSS: () => (/* binding */ changeCSS),\n/* harmony export */   disableButton: () => (/* binding */ disableButton),\n/* harmony export */   handleAttack: () => (/* binding */ handleAttack),\n/* harmony export */   handleHover: () => (/* binding */ handleHover),\n/* harmony export */   resetButtons: () => (/* binding */ resetButtons),\n/* harmony export */   resetDesiredCoordsArray: () => (/* binding */ resetDesiredCoordsArray),\n/* harmony export */   resetOccupiedCoordsArray: () => (/* binding */ resetOccupiedCoordsArray),\n/* harmony export */   setupBoardUI: () => (/* binding */ setupBoardUI),\n/* harmony export */   setupPlaceShipsUI: () => (/* binding */ setupPlaceShipsUI),\n/* harmony export */   showOccupiedSpots: () => (/* binding */ showOccupiedSpots),\n/* harmony export */   showSelected: () => (/* binding */ showSelected)\n/* harmony export */ });\n/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index */ \"./src/index.js\");\n/* harmony import */ var _sounds_bigSplash_mp3__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./sounds/bigSplash.mp3 */ \"./src/sounds/bigSplash.mp3\");\n/* harmony import */ var _sounds_hitEcho_mp3__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./sounds/hitEcho.mp3 */ \"./src/sounds/hitEcho.mp3\");\nfunction _slicedToArray(r, e) { return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray(r, e) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(r, a) { if (r) { if (\"string\" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }\nfunction _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(r) { if (Array.isArray(r)) return r; }\n//sounds effect for a hit or miss\n\n\n\nvar missSound = new Audio(_sounds_bigSplash_mp3__WEBPACK_IMPORTED_MODULE_1__[\"default\"]);\nvar hitSound = new Audio(_sounds_hitEcho_mp3__WEBPACK_IMPORTED_MODULE_2__[\"default\"]);\nvar occupiedCoords = [];\nvar desiredCoords = [];\n\n//setup player and comp board ui\nfunction setupBoardUI(boardID) {\n  var board = document.getElementById(\"\".concat(boardID, \"-board\"));\n  createBoard(board);\n}\n;\nfunction createBoard(board) {\n  //create rows of grid\n  for (var i = 0; i < 10; i++) {\n    var row = document.createElement('div');\n    row.classList.add('row');\n\n    //create cells of each row\n    for (var j = 0; j < 10; j++) {\n      var cell = document.createElement('div');\n      cell.classList.add('cell');\n      cell.dataset.x = i;\n      cell.dataset.y = j;\n      row.appendChild(cell);\n    }\n    board.appendChild(row);\n  }\n}\nfunction setupPlaceShipsUI() {\n  var page = document.getElementById('app');\n\n  //create semi-transparent overlay\n  var overlay = document.createElement('div');\n  overlay.classList.add('overlay');\n  overlay.id = 'overlay';\n  page.appendChild(overlay);\n  var title = document.createElement('h1');\n  title.textContent = 'Place your formation, Captain';\n  overlay.appendChild(title);\n  var uiBody = document.createElement('div');\n  uiBody.classList.add('uiBody');\n  overlay.appendChild(uiBody);\n  var orientationDiv = document.createElement('div');\n  orientationDiv.classList.add('orientationDiv');\n  orientationDiv.id = 'orientationDiv';\n  uiBody.appendChild(orientationDiv);\n  var horizontalButton = document.createElement('button');\n  horizontalButton.id = 'horizontal';\n  horizontalButton.textContent = 'Horizontal';\n  var verticalButton = document.createElement('button');\n  verticalButton.id = 'vertical';\n  verticalButton.textContent = 'Vertical';\n  orientationDiv.appendChild(horizontalButton);\n  orientationDiv.appendChild(verticalButton);\n  var board = document.createElement('div');\n  createBoard(board);\n  board.id = 'board';\n  uiBody.appendChild(board);\n  var buttonDiv = document.createElement('div');\n  buttonDiv.classList.add('buttonDiv');\n  buttonDiv.id = 'buttonDiv';\n  uiBody.appendChild(buttonDiv);\n  var carrierButton = document.createElement('button');\n  carrierButton.textContent = 'Carrier';\n  var battleshipButton = document.createElement('button');\n  battleshipButton.textContent = 'Battleship';\n  var destroyerButton = document.createElement('button');\n  destroyerButton.textContent = 'Destroyer';\n  var submarineButton = document.createElement('button');\n  submarineButton.textContent = 'Submarine';\n  var cruiserButton = document.createElement('button');\n  cruiserButton.textContent = 'Cruiser';\n  buttonDiv.appendChild(carrierButton);\n  carrierButton.id = 'carrier';\n  buttonDiv.appendChild(battleshipButton);\n  battleshipButton.id = 'battleship';\n  buttonDiv.appendChild(destroyerButton);\n  destroyerButton.id = 'destroyer';\n  buttonDiv.appendChild(submarineButton);\n  submarineButton.id = 'submarine';\n  buttonDiv.appendChild(cruiserButton);\n  cruiserButton.id = 'cruiser';\n  var confirmationDiv = document.createElement('div');\n  confirmationDiv.classList.add('confirmationDiv');\n  confirmationDiv.id = 'confirmationDiv';\n  overlay.appendChild(confirmationDiv);\n  var reset = document.createElement('button');\n  reset.textContent = 'Reset';\n  reset.id = 'reset';\n  var confirm = document.createElement('button');\n  confirm.textContent = 'Confirm';\n  confirm.id = 'confirm';\n  confirmationDiv.appendChild(reset);\n  confirmationDiv.appendChild(confirm);\n}\n\n//ui visualization of where ship will go on playerside board\nfunction handleHover(e, ship, orientation) {\n  var _getCoordinates = (0,_index__WEBPACK_IMPORTED_MODULE_0__.getCoordinates)(e),\n    _getCoordinates2 = _slicedToArray(_getCoordinates, 2),\n    x = _getCoordinates2[0],\n    y = _getCoordinates2[1];\n  var length = ship.length;\n  x = Number(x);\n  y = Number(y);\n  var invalidShipPlacement = false;\n\n  //if we have a would-be overboard placement\n  if (orientation === 'vertical' && x + length > 10 || orientation === 'horizontal' && y + length > 10) invalidShipPlacement = true;\n\n  //highlight where the ship will go after placement\n  if (orientation === 'vertical') {\n    for (var i = 0; i < length; i++) {\n      var cell = document.querySelector(\"#board .cell[data-x=\\\"\".concat(x + i, \"\\\"][data-y=\\\"\").concat(y, \"\\\"]\"));\n      if (cell && !invalidShipPlacement) {\n        cell.classList.add('hoverHighlight');\n        cell.classList.remove('overboard');\n        desiredCoords.push([x + i, y]);\n        var overlap = compareDesiredOccupiedCoords();\n        if (overlap) {\n          cell.classList.remove('hoverHighlight');\n          cell.classList.add('overboard');\n          invalidShipPlacement = true;\n        }\n      }\n      if (cell && invalidShipPlacement) {\n        cell.classList.remove('hoverHighlight');\n        cell.classList.add('overboard');\n      }\n    }\n  } else if (orientation === 'horizontal') {\n    for (var j = 0; j < length; j++) {\n      var _cell = document.querySelector(\"#board .cell[data-x=\\\"\".concat(x, \"\\\"][data-y=\\\"\").concat(y + j, \"\\\"]\"));\n      if (_cell && !invalidShipPlacement) {\n        _cell.classList.add('hoverHighlight');\n        _cell.classList.remove('overboard');\n        desiredCoords.push([x, y + j]);\n        var _overlap = compareDesiredOccupiedCoords();\n        if (_overlap) {\n          _cell.classList.remove('hoverHighlight');\n          _cell.classList.add('overboard');\n          invalidShipPlacement = true;\n        }\n      }\n      if (_cell && invalidShipPlacement) {\n        _cell.classList.remove('hoverHighlight');\n        _cell.classList.add('overboard');\n      }\n    }\n  }\n  return invalidShipPlacement;\n}\n;\nfunction compareDesiredOccupiedCoords() {\n  var newDesired = desiredCoords.map(function (index) {\n    return index.join('');\n  });\n  var newOccupied = occupiedCoords.map(function (index) {\n    return index.join('');\n  });\n  return newDesired.some(function (element) {\n    return newOccupied.includes(element);\n  });\n}\nfunction showOccupiedSpots() {\n  occupiedCoords.forEach(function (index) {\n    var _index = _slicedToArray(index, 2),\n      x = _index[0],\n      y = _index[1];\n    x = Number(x);\n    y = Number(y);\n    var cell = document.querySelector(\"#player-board .cell[data-x=\\\"\".concat(x, \"\\\"][data-y=\\\"\").concat(y, \"\\\"]\"));\n    cell.classList.add('occupiedCell');\n  });\n}\n\n//show selected position as highlighted on the board permanently\nfunction showSelected(coordinates, ship, orientation) {\n  var _coordinates = _slicedToArray(coordinates, 2),\n    x = _coordinates[0],\n    y = _coordinates[1];\n  var length = ship.length;\n  x = Number(x);\n  y = Number(y);\n  if (orientation === 'vertical') {\n    for (var i = 0; i < length; i++) {\n      var cell = document.querySelector(\"#board .cell[data-x=\\\"\".concat(x + i, \"\\\"][data-y=\\\"\").concat(y, \"\\\"]\"));\n      if (cell) {\n        occupiedCoords.push([x + i, y]);\n        cell.classList.add('selectedHighlight');\n      }\n    }\n  } else if (orientation === 'horizontal') {\n    for (var j = 0; j < length; j++) {\n      var _cell2 = document.querySelector(\"#board .cell[data-x=\\\"\".concat(x, \"\\\"][data-y=\\\"\").concat(y + j, \"\\\"]\"));\n      if (_cell2) {\n        occupiedCoords.push([x, y + j]);\n        _cell2.classList.add('selectedHighlight');\n      }\n    }\n  }\n}\n\n//disables player from placing one ship in multiple spots\nfunction disableButton(button, board) {\n  button.classList.add('forbiddenButton');\n  board.classList.add('forbiddenButton');\n}\nfunction resetOccupiedCoordsArray() {\n  occupiedCoords = [];\n}\nfunction resetDesiredCoordsArray() {\n  desiredCoords = [];\n}\nfunction resetButtons(buttonDiv) {\n  var buttons = buttonDiv.querySelectorAll('button');\n  buttons.forEach(function (button) {\n    button.classList.remove('forbiddenButton');\n  });\n}\n\n//more responsive button selection ui\nfunction changeCSS(board) {\n  board.classList.remove('forbiddenButton');\n  var div = document.getElementById('buttonDiv');\n  var buttons = div.querySelectorAll('button');\n  buttons.forEach(function (button) {\n    button.classList.remove('selectedButton');\n  });\n}\n\n//receive coordinates\nfunction handleAttack(player, opponent, coordinates, gameFinished) {\n  //send attack to gameboard/ship objects\n  var result = opponent.gameboard.receiveAttack(coordinates);\n\n  //play sound of being hit or missed\n  playSound(result);\n\n  //update ui to reflect changes\n  //timeout func - ui change and sound plays at the exact same time\n  setTimeout(function () {\n    updateUI(opponent.type, result, coordinates);\n  }, 500);\n  gameFinished = false;\n\n  //check gameover\n  if (opponent.gameboard.allPlayerShipsSunk() || opponent.gameboard.allCompShipsSunk()) {\n    gameOver(player);\n    gameFinished = true;\n  }\n  return gameFinished;\n}\n;\nfunction updateUI(player, result, coordinates) {\n  var _coordinates2 = _slicedToArray(coordinates, 2),\n    x = _coordinates2[0],\n    y = _coordinates2[1];\n  var cell = document.querySelector(\".\".concat(player, \"-board [data-x=\\\"\").concat(x, \"\\\"][data-y=\\\"\").concat(y, \"\\\"]\"));\n\n  //disable from being clicked again\n  cell.classList.add('forbiddenButton');\n  var marker = document.createElement('div');\n  marker.id = 'marker';\n  if (result === 'Miss') {\n    cell.appendChild(marker);\n    marker.classList.add('markerMiss');\n  } else if (result === 'Hit!') {\n    cell.appendChild(marker);\n    marker.classList.add('markerHit');\n  } else console.error(new Error('Something wrong happened'));\n}\n;\n\n//play splash sound if miss, boom if hit\nfunction playSound(result) {\n  if (result === 'Miss') missSound.play();else hitSound.play();\n}\nfunction gameOver(player) {\n  var page = document.getElementById('app');\n\n  //create semi-transparent overlay\n  var overlay = document.createElement('div');\n  overlay.classList.add('overlay');\n  page.appendChild(overlay);\n\n  //game over text\n  var title = document.createElement('h1');\n  var subTitle = document.createElement('h2');\n  if (player.type === 'player') {\n    title.textContent = 'Congratulations!';\n    subTitle.textContent = 'You Win';\n  } else {\n    title.textContent = 'Game Over!';\n    subTitle.textContent = 'You Lose';\n  }\n  overlay.appendChild(title);\n  overlay.appendChild(subTitle);\n\n  //button to play again\n  var restart = document.createElement('button');\n  restart.textContent = 'Play Again?';\n  overlay.appendChild(restart);\n  restart.addEventListener('click', function () {\n    window.location.reload(); //reload the page - start a new game\n  });\n}\n\n//# sourceURL=webpack://battleship/./src/domManager.js?");

/***/ }),

/***/ "./src/gameboard.js":
/*!**************************!*\
  !*** ./src/gameboard.js ***!
  \**************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("function _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _slicedToArray(r, e) { return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray(r, e) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(r, a) { if (r) { if (\"string\" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }\nfunction _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(r) { if (Array.isArray(r)) return r; }\nfunction _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\"); }\nfunction _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }\nfunction _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", { writable: !1 }), e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nvar Ship = __webpack_require__(/*! ./ship */ \"./src/ship.js\");\n\n//instantiate all valid ships for the game\nvar playerAircraftCarrier = new Ship('Aircraft Carrier', 5);\nvar playerBattleship = new Ship('Battleship', 4);\nvar playerDestroyer = new Ship('Destroyer', 3);\nvar playerSubmarine = new Ship('Submarine', 3);\nvar playerCruiser = new Ship('Cruiser', 2);\nvar compAircraftCarrier = new Ship('Aircraft Carrier', 5);\nvar compBattleship = new Ship('Battleship', 4);\nvar compDestroyer = new Ship('Destroyer', 3);\nvar compSubmarine = new Ship('Submarine', 3);\nvar compCruiser = new Ship('Cruiser', 2);\nvar Gameboard = /*#__PURE__*/function () {\n  function Gameboard() {\n    _classCallCheck(this, Gameboard);\n    this.board = [];\n    for (var i = 0; i < 10; i++) {\n      this.board.push(new Array(10).fill(null));\n    }\n    this.occupiedCoordinates = []; //stores spots that are taken - prevent overlap ships\n    this.desiredCoordinates = []; //compares with occupied when placing ship - prevent overlap ships\n    this.firedUpon = []; //stores all coordinates that have been fired upon already\n    this.hits = []; //stores all coordinates that were hit\n    this.misses = []; //stores all coordinates that were misses\n\n    this.playerACLocation = [];\n    this.playerBLocation = [];\n    this.playerDLocation = [];\n    this.playerSUBLocation = [];\n    this.playerCLocation = [];\n    this.playerShipsObject = {\n      'pAC': playerAircraftCarrier,\n      'pB': playerBattleship,\n      'pD': playerDestroyer,\n      'pSUB': playerSubmarine,\n      'pC': playerCruiser\n    };\n    this.compShipsObject = {\n      'cAC': compAircraftCarrier,\n      'cB': compBattleship,\n      'cD': compDestroyer,\n      'cSUB': compSubmarine,\n      'cC': compCruiser\n    };\n  }\n\n  //prevent ship from going off the board \n  //*helper to placeShip method*\n  return _createClass(Gameboard, [{\n    key: \"avoidOverBoard\",\n    value: function avoidOverBoard(x, y, orientation, ship) {\n      if (x < 0 || y < 0 || x > 9 || y > 9) return false;\n      if (orientation === 'horizontal' && y + ship.length > 10) return false;else if (orientation === 'vertical' && x + ship.length > 10) return false;\n      return true;\n    }\n\n    //add to desired position array\n    //*helper to placeShip method*\n  }, {\n    key: \"setDesiredCoordinates\",\n    value: function setDesiredCoordinates(x, y, ship, orientation) {\n      if (orientation === 'horizontal') {\n        for (var i = 0; i < ship.length; i++) {\n          this.desiredCoordinates.push([x, y + i]);\n        }\n      } else if (orientation === 'vertical') {\n        for (var _i = 0; _i < ship.length; _i++) {\n          this.desiredCoordinates.push([x + _i, y]);\n        }\n      }\n      return this.desiredCoordinates;\n    }\n\n    //compare desired position array with occupied array - check if any spots are taken\n    //*helper to placeShip method*\n  }, {\n    key: \"occupiedSpotCheck\",\n    value: function occupiedSpotCheck() {\n      for (var i = 0; i < this.occupiedCoordinates.length; i++) {\n        var _this$occupiedCoordin = _slicedToArray(this.occupiedCoordinates[i], 2),\n          occupiedX = _this$occupiedCoordin[0],\n          occupiedY = _this$occupiedCoordin[1];\n        for (var j = 0; j < this.desiredCoordinates.length; j++) {\n          var _this$desiredCoordina = _slicedToArray(this.desiredCoordinates[j], 2),\n            desiredX = _this$desiredCoordina[0],\n            desiredY = _this$desiredCoordina[1];\n\n          //if the desired spot is already taken - return\n          if (occupiedX === desiredX && occupiedY === desiredY) {\n            this.desiredCoordinates = []; //clear array for next round\n            return true;\n          }\n        }\n      }\n      return false;\n    }\n  }, {\n    key: \"placeShip\",\n    value: function placeShip(ship, startPosition, orientation, marker) {\n      //get coordinates\n      var _startPosition = _slicedToArray(startPosition, 2),\n        x = _startPosition[0],\n        y = _startPosition[1];\n      var isValid = this.avoidOverBoard(x, y, orientation, ship);\n      if (!isValid) return 'Invalid position';\n      this.setDesiredCoordinates(x, y, ship, orientation);\n      var isOccupied = this.occupiedSpotCheck();\n      if (isOccupied) return 'That spot is taken';\n\n      //selected spot is on board and unoccupied - place ship on board\n      for (var i = 0; i < this.desiredCoordinates.length; i++) {\n        var _this$desiredCoordina2 = _slicedToArray(this.desiredCoordinates[i], 2),\n          row = _this$desiredCoordina2[0],\n          col = _this$desiredCoordina2[1];\n        this.board[row][col] = marker;\n        this.occupiedCoordinates.push([row, col]); //update occupied coordinates\n\n        //add player coordinates to array - used for smarter computer attack ai\n        if (marker === 'pAC') this.playerACLocation.push([row, col]);\n        if (marker === 'pB') this.playerBLocation.push([row, col]);\n        if (marker === 'pD') this.playerDLocation.push([row, col]);\n        if (marker === 'pSUB') this.playerSUBLocation.push([row, col]);\n        if (marker === 'pC') this.playerCLocation.push([row, col]);\n      }\n      this.desiredCoordinates = []; //clear array for next round\n    }\n\n    //set the comp ship positions randomly each playthrough\n  }, {\n    key: \"placeRandomShip\",\n    value: function placeRandomShip(ship, marker) {\n      var isValidPlacement = false;\n      while (!isValidPlacement) {\n        //generate random start coordinates\n        var x = Math.floor(Math.random() * 10);\n        var y = Math.floor(Math.random() * 10);\n\n        //set ship as horizontal or vertical\n        var orientation = this.getRandomShipOrientation();\n\n        //avoid going overboard\n        if (this.avoidOverBoard(x, y, orientation, ship)) {\n          this.setDesiredCoordinates(x, y, ship, orientation);\n\n          //avoid occupied position\n          if (!this.occupiedSpotCheck()) {\n            //place ship and mark valid\n            this.placeShip(ship, [x, y], orientation, marker);\n            isValidPlacement = true;\n          }\n        }\n      }\n    }\n  }, {\n    key: \"getRandomShipOrientation\",\n    value: function getRandomShipOrientation() {\n      var orientation = Math.floor(Math.random() * 10) % 2;\n      if (orientation === 0) return 'horizontal';else return 'vertical';\n    }\n\n    //check if selected spot has already been shot\n    //*helper function to receiveAttack method*\n  }, {\n    key: \"firedCheck\",\n    value: function firedCheck(x, y) {\n      for (var i = 0; i < this.firedUpon.length; i++) {\n        var _this$firedUpon$i = _slicedToArray(this.firedUpon[i], 2),\n          firedUponX = _this$firedUpon$i[0],\n          firedUponY = _this$firedUpon$i[1];\n        if (x === firedUponX && y === firedUponY) return true;\n      }\n      return false;\n    }\n\n    //take hit - show on board\n  }, {\n    key: \"receiveAttack\",\n    value: function receiveAttack(attackCoordinates) {\n      var _attackCoordinates = _slicedToArray(attackCoordinates, 2),\n        x = _attackCoordinates[0],\n        y = _attackCoordinates[1];\n      var location = this.board[x][y];\n      var alreadyShot = this.firedCheck(x, y);\n      if (alreadyShot) return 'You already shot there';\n\n      //send coordinates to array - can't fire upon again\n      this.firedUpon.push([x, y]);\n\n      //attack missed - show on board\n      if (location === null) {\n        this.misses.push([x, y]);\n        this.board[x][y] = 'o';\n        return 'Miss';\n\n        //attack hit - show on board and send damage to ship class\n      } else {\n        this.hits.push([x, y]);\n        if (this.playerShipsObject[location]) this.playerShipsObject[location].getHit();else if (this.compShipsObject[location]) this.compShipsObject[location].getHit();\n        this.board[x][y] = 'x';\n        return 'Hit!';\n      }\n    }\n  }, {\n    key: \"allPlayerShipsSunk\",\n    value: function allPlayerShipsSunk() {\n      return Object.values(this.playerShipsObject).every(function (ship) {\n        return ship && ship.isSunk;\n      });\n    }\n  }, {\n    key: \"allCompShipsSunk\",\n    value: function allCompShipsSunk() {\n      return Object.values(this.compShipsObject).every(function (ship) {\n        return ship && ship.isSunk;\n      });\n    }\n  }]);\n}();\nmodule.exports = Gameboard;\n\n//# sourceURL=webpack://battleship/./src/gameboard.js?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getCoordinates: () => (/* binding */ getCoordinates)\n/* harmony export */ });\n/* harmony import */ var _domManager__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./domManager */ \"./src/domManager.js\");\n/* harmony import */ var _sounds_brrrt_mp3__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./sounds/brrrt.mp3 */ \"./src/sounds/brrrt.mp3\");\n/* harmony import */ var _sounds_fireEcho_mp3__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./sounds/fireEcho.mp3 */ \"./src/sounds/fireEcho.mp3\");\n/* harmony import */ var _sounds_missile_mp3__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./sounds/missile.mp3 */ \"./src/sounds/missile.mp3\");\n/* harmony import */ var _sounds_mortar_mp3__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./sounds/mortar.mp3 */ \"./src/sounds/mortar.mp3\");\n/* harmony import */ var _sounds_phalanx_mp3__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./sounds/phalanx.mp3 */ \"./src/sounds/phalanx.mp3\");\nfunction _toConsumableArray(r) { return _arrayWithoutHoles(r) || _iterableToArray(r) || _unsupportedIterableToArray(r) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(r, a) { if (r) { if (\"string\" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }\nfunction _iterableToArray(r) { if (\"undefined\" != typeof Symbol && null != r[Symbol.iterator] || null != r[\"@@iterator\"]) return Array.from(r); }\nfunction _arrayWithoutHoles(r) { if (Array.isArray(r)) return _arrayLikeToArray(r); }\nfunction _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }\nvar Ship = __webpack_require__(/*! ./ship */ \"./src/ship.js\");\nvar Gameboard = __webpack_require__(/*! ./gameboard */ \"./src/gameboard.js\");\nvar Player = __webpack_require__(/*! ./player */ \"./src/player.js\");\n\n\n//attack sound fx\n\n\n\n\n\nvar attack1 = new Audio(_sounds_brrrt_mp3__WEBPACK_IMPORTED_MODULE_1__[\"default\"]);\nvar attack2 = new Audio(_sounds_fireEcho_mp3__WEBPACK_IMPORTED_MODULE_2__[\"default\"]);\nvar attack3 = new Audio(_sounds_missile_mp3__WEBPACK_IMPORTED_MODULE_3__[\"default\"]);\nvar attack4 = new Audio(_sounds_mortar_mp3__WEBPACK_IMPORTED_MODULE_4__[\"default\"]);\nvar attack5 = new Audio(_sounds_phalanx_mp3__WEBPACK_IMPORTED_MODULE_5__[\"default\"]);\nvar attackSounds = {\n  1: attack1,\n  2: attack2,\n  3: attack3,\n  4: attack4,\n  5: attack5\n};\n\n//instantiate player's ships\nvar playerAircraftCarrier = new Ship('Aircraft Carrier', 5);\nvar playerBattleship = new Ship('Battleship', 4);\nvar playerDestroyer = new Ship('Destroyer', 3);\nvar playerSubmarine = new Ship('Submarine', 3);\nvar playerCruiser = new Ship('Cruiser', 2);\n\n//instantiate computer's ships\nvar compAircraftCarrier = new Ship('Aircraft Carrier', 5);\nvar compBattleship = new Ship('Battleship', 4);\nvar compDestroyer = new Ship('Destroyer', 3);\nvar compSubmarine = new Ship('Submarine', 3);\nvar compCruiser = new Ship('Cruiser', 2);\n\n//setup players\nvar player = new Player('Player', 'player');\nvar computer = new Player('Computer', 'computer');\n\n//place comp ships randomly\ncomputer.gameboard.placeRandomShip(compAircraftCarrier, 'cAC');\ncomputer.gameboard.placeRandomShip(compBattleship, 'cB');\ncomputer.gameboard.placeRandomShip(compDestroyer, 'cD');\ncomputer.gameboard.placeRandomShip(compSubmarine, 'cSUB');\ncomputer.gameboard.placeRandomShip(compCruiser, 'cC');\n\n//setup ui to place player's ships\n(0,_domManager__WEBPACK_IMPORTED_MODULE_0__.setupPlaceShipsUI)();\n\n//setup player and comp boards\n(0,_domManager__WEBPACK_IMPORTED_MODULE_0__.setupBoardUI)('player');\n(0,_domManager__WEBPACK_IMPORTED_MODULE_0__.setupBoardUI)('computer');\n\n//instantiate variables for player ship placement ui\nvar placementBoard = document.getElementById('board');\nvar buttonDiv = document.getElementById('buttonDiv');\nvar cells = document.querySelectorAll('#board .cell');\n\n//this array will store the players ships placement details\nvar playerChoice = [];\nvar playerOrientation;\nvar playerShip;\n\n//get player selection ui buttons\nvar carrier = document.getElementById('carrier');\nvar battleship = document.getElementById('battleship');\nvar destroyer = document.getElementById('destroyer');\nvar submarine = document.getElementById('submarine');\nvar cruiser = document.getElementById('cruiser');\nvar shipMapping = {\n  'Aircraft Carrier': [playerAircraftCarrier, 'pAC'],\n  'Battleship': [playerBattleship, 'pB'],\n  'Destroyer': [playerDestroyer, 'pD'],\n  'Submarine': [playerSubmarine, 'pSUB'],\n  'Cruiser': [playerCruiser, 'pC']\n};\n\n//ui visual for player ship placement\nplacementBoard.addEventListener('mouseover', function (e) {\n  (0,_domManager__WEBPACK_IMPORTED_MODULE_0__.handleHover)(e, playerShip, playerOrientation);\n});\nplacementBoard.addEventListener('mouseout', function (e) {\n  cells.forEach(function (cell) {\n    cell.classList.remove('hoverHighlight');\n    cell.classList.remove('overboard');\n  });\n  (0,_domManager__WEBPACK_IMPORTED_MODULE_0__.resetDesiredCoordsArray)();\n});\n\n//player ship coordinate selection\nplacementBoard.addEventListener('mouseup', function (e) {\n  var coordinates = getCoordinates(e);\n  var invalidShip = (0,_domManager__WEBPACK_IMPORTED_MODULE_0__.handleHover)(e, playerShip, playerOrientation);\n  if (!invalidShip) {\n    playerChoice.push([coordinates, playerOrientation, playerShip]);\n    monitorPlayerChoiceArray(playerChoice, placementBoard);\n    (0,_domManager__WEBPACK_IMPORTED_MODULE_0__.showSelected)(coordinates, playerShip, playerOrientation);\n    validateConfirmButton();\n  }\n});\n\n//player ship selection\nbuttonDiv.addEventListener('click', function (e) {\n  switch (true) {\n    case e.target === carrier:\n      playerShip = playerAircraftCarrier;\n      (0,_domManager__WEBPACK_IMPORTED_MODULE_0__.changeCSS)(placementBoard);\n      carrier.classList.add('selectedButton');\n      break;\n    case e.target === battleship:\n      playerShip = playerBattleship;\n      (0,_domManager__WEBPACK_IMPORTED_MODULE_0__.changeCSS)(placementBoard);\n      battleship.classList.add('selectedButton');\n      break;\n    case e.target === destroyer:\n      playerShip = playerDestroyer;\n      (0,_domManager__WEBPACK_IMPORTED_MODULE_0__.changeCSS)(placementBoard);\n      destroyer.classList.add('selectedButton');\n      break;\n    case e.target === submarine:\n      playerShip = playerSubmarine;\n      (0,_domManager__WEBPACK_IMPORTED_MODULE_0__.changeCSS)(placementBoard);\n      submarine.classList.add('selectedButton');\n      break;\n    case e.target === cruiser:\n      playerShip = playerCruiser;\n      (0,_domManager__WEBPACK_IMPORTED_MODULE_0__.changeCSS)(placementBoard);\n      cruiser.classList.add('selectedButton');\n      break;\n  }\n});\n\n//player ship orientation selection\ndocument.getElementById('orientationDiv').addEventListener('click', function (e) {\n  var horizontal = document.getElementById('horizontal');\n  var vertical = document.getElementById('vertical');\n  if (e.target === vertical) {\n    playerOrientation = 'vertical';\n    vertical.classList.add('selectedButton');\n    horizontal.classList.remove('selectedButton');\n  } else {\n    playerOrientation = 'horizontal';\n    vertical.classList.remove('selectedButton');\n    horizontal.classList.add('selectedButton');\n  }\n});\n\n//monitors what has been added into the playerchoice array\n//if a ship has been added to the array, that ship cannot be added again\nfunction monitorPlayerChoiceArray(array, board) {\n  array.forEach(function (index) {\n    var shipInfo = index[2];\n    if (shipInfo === playerAircraftCarrier) (0,_domManager__WEBPACK_IMPORTED_MODULE_0__.disableButton)(carrier, board);\n    if (shipInfo === playerBattleship) (0,_domManager__WEBPACK_IMPORTED_MODULE_0__.disableButton)(battleship, board);\n    if (shipInfo === playerDestroyer) (0,_domManager__WEBPACK_IMPORTED_MODULE_0__.disableButton)(destroyer, board);\n    if (shipInfo === playerSubmarine) (0,_domManager__WEBPACK_IMPORTED_MODULE_0__.disableButton)(submarine, board);\n    if (shipInfo === playerCruiser) (0,_domManager__WEBPACK_IMPORTED_MODULE_0__.disableButton)(cruiser, board);\n  });\n}\n\n//set default button selection\n//default select orientation and ship\ndocument.addEventListener('DOMContentLoaded', function () {\n  horizontal.click();\n  carrier.click();\n  confirmButton.classList.add('forbiddenButton');\n});\n\n//reset button\n//resets the board completely\ndocument.getElementById('reset').addEventListener('click', function () {\n  playerChoice = [];\n  (0,_domManager__WEBPACK_IMPORTED_MODULE_0__.changeCSS)(placementBoard);\n  (0,_domManager__WEBPACK_IMPORTED_MODULE_0__.resetButtons)(buttonDiv);\n  cells.forEach(function (cell) {\n    cell.classList.remove('selectedHighlight');\n  });\n  (0,_domManager__WEBPACK_IMPORTED_MODULE_0__.resetOccupiedCoordsArray)();\n  carrier.click();\n  confirmButton.classList.add('forbiddenButton');\n});\n\n//confirm player ship placement, remove overlay, game begins \nvar confirmButton = document.getElementById('confirm');\nconfirmButton.addEventListener('click', function () {\n  var overlay = document.getElementById('overlay');\n  if (playerChoice.length === 5) overlay.remove();\n  handleShipPlacement(playerChoice);\n  (0,_domManager__WEBPACK_IMPORTED_MODULE_0__.showOccupiedSpots)();\n});\nfunction validateConfirmButton() {\n  if (playerChoice.length === 5) confirmButton.classList.remove('forbiddenButton');\n}\n;\n\n//helper function to the confirmation button func\n//take info from player ship placement ui and place ships onto player board\nfunction handleShipPlacement(arr) {\n  for (var i = 0; i < arr.length; i++) {\n    var coordinates = arr[i][0].map(function (index) {\n      return Number(index);\n    });\n    var orientation = arr[i][1];\n    var title = arr[i][2].name;\n    var shipInfo = shipMapping[title];\n\n    //place player ships onto player gameboard\n    player.gameboard.placeShip(shipInfo[0], coordinates, orientation, shipInfo[1]);\n  }\n}\n\n// player to start the game\nvar playersTurn = true;\n//click cell to trigger attack on comp\nvar computerBoard = document.getElementById('computer-board');\ncomputerBoard.addEventListener('click', function (e) {\n  if (!playersTurn) {\n    computerAttack();\n    return;\n  }\n  ;\n  var coordinates = getCoordinates(e);\n\n  //attack sound effect\n  var number = genNum125();\n  attackSounds[number].play();\n\n  //bugFix - prevent spam clicking\n  computerBoard.classList.add('forbiddenButton');\n  setTimeout(function () {\n    var gameFinished = (0,_domManager__WEBPACK_IMPORTED_MODULE_0__.handleAttack)(player, computer, coordinates, gameFinished);\n    setTimeout(function () {\n      playersTurn = false;\n      computerAttack(gameFinished);\n    }, 2000);\n  }, 2000);\n});\n\n//computer attacks random spot\nfunction computerAttack(gameFinished) {\n  if (playersTurn || gameFinished) return;\n  var coordinates;\n  var number = genNum125();\n  attackSounds[number].play();\n\n  //if ship already hit - attack the rest\n  if (directAttacksQ.length) coordinates = directAttacksQ.shift();\n\n  //else attack a random spot\n  else coordinates = generateRandomCoordinates();\n  setTimeout(function () {\n    (0,_domManager__WEBPACK_IMPORTED_MODULE_0__.handleAttack)(computer, player, coordinates, gameFinished);\n    playersTurn = true;\n    computerBoard.classList.remove('forbiddenButton');\n  }, 2000);\n}\n\n//get coordinates when computer board cell clicked\nfunction getCoordinates(e) {\n  var x = e.target.dataset.x;\n  var y = e.target.dataset.y;\n  return [x, y];\n}\n\n//store for computer attack\nvar randomAttacksQ = [];\nfor (var i = 0; i <= 99; i++) {\n  randomAttacksQ.push(i);\n}\n;\n\n//select random index from randomAttacksQ - avoids picking the same one twice\nfunction generateRandomCoordinates() {\n  //generate random coordinates\n  var randomIndex = Math.floor(Math.random() * randomAttacksQ.length);\n  var number = randomAttacksQ.splice(randomIndex, 1)[0];\n  var coordinates = number.toString().split('').map(Number);\n  if (coordinates.length === 1) coordinates.unshift(0);\n\n  //if shot is a hit, load up attack queue for further bombardment!\n  confirmHit(coordinates);\n  return coordinates;\n}\n\n//for comp to attack remaining ship parts after a hit\nvar directAttacksQ = [];\nvar allPlayerPositions = [[player.gameboard.playerACLocation], [player.gameboard.playerBLocation], [player.gameboard.playerDLocation], [player.gameboard.playerSUBLocation], [player.gameboard.playerCLocation]];\n\n//when comp gets a 'hit' add rest of player's ship to attack queue\n//after ship is sunk, back to random attacks\nfunction confirmHit(targetedCoords) {\n  targetedCoords = targetedCoords.join('');\n\n  //compare the generated targetedCoords with players chosen coords to determine if it will be a hit\n  //if a hit then will start honing in on that ship\n  //go into the first array - all player ships\n  var _loop = function _loop(_i) {\n    var _loop2 = function _loop2(j) {\n      //go into the third array - ships coordinates\n      allPlayerPositions[_i][j].forEach(function (part) {\n        var current = part.join('');\n        if (targetedCoords === current) {\n          //add player positions to the 'to-attack queue'\n          directAttacksQ = _toConsumableArray(allPlayerPositions[_i][j]);\n          //remove position that was already attack - avoid bug\n          directAttacksQ = directAttacksQ.filter(function (coord) {\n            return coord.join('') !== targetedCoords;\n          });\n          adjustRandomAttacksArray();\n          return;\n        }\n      });\n    };\n    //go into the second array - a ship\n    for (var j = 0; j < allPlayerPositions[_i].length; j++) {\n      _loop2(j);\n    }\n  };\n  for (var _i = 0; _i < allPlayerPositions.length; _i++) {\n    _loop(_i);\n  }\n}\n\n//removes directAttack coordinates from randomAttacksQ - avoid comp from attempting the same spot twice \nfunction adjustRandomAttacksArray() {\n  //compare directAttacksQ with randomAttacksQ\n  //remove duplicates\n  var num = directAttacksQ.map(function (array) {\n    return array.join('');\n  }).map(function (index) {\n    return Number(index);\n  });\n  randomAttacksQ = randomAttacksQ.filter(function (index) {\n    return !num.includes(index);\n  });\n}\n\n//generates a number 1-5 used for the attack sound effects \nfunction genNum125() {\n  var number = Math.floor(Math.random() * 5) + 1;\n  return number;\n}\n\n//# sourceURL=webpack://battleship/./src/index.js?");

/***/ }),

/***/ "./src/player.js":
/*!***********************!*\
  !*** ./src/player.js ***!
  \***********************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("function _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }\nfunction _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", { writable: !1 }), e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\"); }\nvar Gameboard = __webpack_require__(/*! ./gameboard */ \"./src/gameboard.js\");\nvar Player = /*#__PURE__*/_createClass(function Player(name, type) {\n  _classCallCheck(this, Player);\n  this.name = name;\n  this.type = type; //person or computer\n  this.gameboard = new Gameboard();\n});\nmodule.exports = Player;\n\n//# sourceURL=webpack://battleship/./src/player.js?");

/***/ }),

/***/ "./src/ship.js":
/*!*********************!*\
  !*** ./src/ship.js ***!
  \*********************/
/***/ ((module) => {

eval("function _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\"); }\nfunction _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }\nfunction _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", { writable: !1 }), e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nvar Ship = /*#__PURE__*/function () {\n  function Ship(name, length) {\n    _classCallCheck(this, Ship);\n    this.name = name;\n    this.length = length;\n    this.hitPoints = 0;\n    this.isSunk = false;\n  }\n  return _createClass(Ship, [{\n    key: \"getHit\",\n    value: function getHit() {\n      if (this.hitPoints !== this.length) this.hitPoints++;\n      if (this.hitPoints === this.length) this.isSunk = true;\n    }\n  }, {\n    key: \"checkIfSunk\",\n    value: function checkIfSunk() {\n      return this.isSunk;\n    }\n  }]);\n}();\nmodule.exports = Ship;\n\n//# sourceURL=webpack://battleship/./src/ship.js?");

/***/ }),

/***/ "./src/sounds/bigSplash.mp3":
/*!**********************************!*\
  !*** ./src/sounds/bigSplash.mp3 ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + \"sounds/bigSplash.7105be403036a351f8fe637ac2353abc.mp3\");\n\n//# sourceURL=webpack://battleship/./src/sounds/bigSplash.mp3?");

/***/ }),

/***/ "./src/sounds/brrrt.mp3":
/*!******************************!*\
  !*** ./src/sounds/brrrt.mp3 ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + \"sounds/brrrt.163eb3637bc05c541d859caac432b3df.mp3\");\n\n//# sourceURL=webpack://battleship/./src/sounds/brrrt.mp3?");

/***/ }),

/***/ "./src/sounds/fireEcho.mp3":
/*!*********************************!*\
  !*** ./src/sounds/fireEcho.mp3 ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + \"sounds/fireEcho.6ef049eaf206d1679f55d6afd5311993.mp3\");\n\n//# sourceURL=webpack://battleship/./src/sounds/fireEcho.mp3?");

/***/ }),

/***/ "./src/sounds/hitEcho.mp3":
/*!********************************!*\
  !*** ./src/sounds/hitEcho.mp3 ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + \"sounds/hitEcho.c2e31f3126531db5ef1db5456542589c.mp3\");\n\n//# sourceURL=webpack://battleship/./src/sounds/hitEcho.mp3?");

/***/ }),

/***/ "./src/sounds/missile.mp3":
/*!********************************!*\
  !*** ./src/sounds/missile.mp3 ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + \"sounds/missile.021130b51f2dd6681db6611ca20ac50d.mp3\");\n\n//# sourceURL=webpack://battleship/./src/sounds/missile.mp3?");

/***/ }),

/***/ "./src/sounds/mortar.mp3":
/*!*******************************!*\
  !*** ./src/sounds/mortar.mp3 ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + \"sounds/mortar.9d5f078f985bc3ceb5663cb8370662dc.mp3\");\n\n//# sourceURL=webpack://battleship/./src/sounds/mortar.mp3?");

/***/ }),

/***/ "./src/sounds/phalanx.mp3":
/*!********************************!*\
  !*** ./src/sounds/phalanx.mp3 ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + \"sounds/phalanx.18a4f5f75a1d3ce3ad51550cbcd76bde.mp3\");\n\n//# sourceURL=webpack://battleship/./src/sounds/phalanx.mp3?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/global */
/******/ 	(() => {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/publicPath */
/******/ 	(() => {
/******/ 		var scriptUrl;
/******/ 		if (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + "";
/******/ 		var document = __webpack_require__.g.document;
/******/ 		if (!scriptUrl && document) {
/******/ 			if (document.currentScript)
/******/ 				scriptUrl = document.currentScript.src;
/******/ 			if (!scriptUrl) {
/******/ 				var scripts = document.getElementsByTagName("script");
/******/ 				if(scripts.length) {
/******/ 					var i = scripts.length - 1;
/******/ 					while (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;
/******/ 				}
/******/ 			}
/******/ 		}
/******/ 		// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration
/******/ 		// or pass an empty string ("") and set the __webpack_public_path__ variable from your code to use your own logic.
/******/ 		if (!scriptUrl) throw new Error("Automatic publicPath is not supported in this browser");
/******/ 		scriptUrl = scriptUrl.replace(/#.*$/, "").replace(/\?.*$/, "").replace(/\/[^\/]+$/, "/");
/******/ 		__webpack_require__.p = scriptUrl;
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module is referenced by other modules so it can't be inlined
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.js");
/******/ 	
/******/ })()
;